/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        qw {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        qe {
            bindings = <&kp LS(TAB)>;
            key-positions = <13 15>;
        };

        lsc {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
        };

        mcomma {
            bindings = <&kp BACKSPACE>;
            key-positions = <44 43>;
        };

        commaperiod {
            bindings = <&kp DELETE>;
            key-positions = <44 45>;
        };

        we {
            bindings = <&kp LS(TAB)>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
&kp EQUAL         &kp N1              &kp N2           &kp N3              &kp N4           &kp N5                              &kp N6     &kp N7             &kp N8               &kp N9           &kp N0                       &kp MINUS
&kp TAB           &kp Q               &kp W            &kp E               &kp R            &kp T                               &kp Y      &kp U              &kp I                &kp O            &kp P                        &kp BSLH
&kp LEFT_CONTROL  &mt LEFT_CONTROL A  &mt LALT S       &mt LEFT_COMMAND D  &mt LSHFT F      &kp G                               &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LSHFT         &kp Z               &kp X            &kp C               &kp V            &kp B                               &kp N      &kp M              &kp COMMA            &kp DOT          &kp FSLH                     &kp RSHIFT
&gresc            &kp GLOBE           &kp LEFT         &kp RIGHT                                      &kp UP                    &kp DOWN   &kp LBKT           &kp RBKT
&kp LALT          &kp LCMD                             &kp RGUI            &kp ESCAPE
                                                       &kp SPACE           &lt 1 BACKSPACE  &kp HOME  &kp PAGE_UP  &lt 2 ENTER  &kp SPACE
                  &lt 3 END           &lt 3 PAGE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        num {
            bindings = <
&kp F1  &kp F2        &kp F3     &kp F4      &kp F5       &kp F6                         &kp F7     &kp F8  &kp F9  &kp F10  &kp F11    &kp F12
&trans  &kp LS(EXCL)  &kp HASH   &kp DOLLAR  &kp PERCENT  &kp CARET                      &kp PLUS   &kp N7  &kp N8  &kp N9   &kp STAR   &trans
&trans  &kp LCTRL     &kp LALT   &kp LGUI    &kp LSHFT    &kp GLOBE                      &kp N0     &kp N4  &kp N5  &kp N6   &kp EQUAL  &trans
&trans  &kp LG(Z)     &kp LG(X)  &kp LG(C)   &kp LG(V)    &kp LG(LS(Z))                  &kp MINUS  &kp N1  &kp N2  &kp N3   &kp FSLH   &trans
&trans  &trans        &trans     &trans                                  &trans          &trans     &trans  &trans
&trans  &trans                   &trans      &trans
                                 &trans      &trans       &trans         &trans  &trans  &trans
        &trans        &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans     &trans         &trans                &trans                 &trans                            &trans       &trans     &trans      &trans     &trans   &trans
&trans  &kp TILDE  &kp UNDER      &kp LBKT              &kp RBKT               &kp PIPE                          &kp HOME     &kp PG_UP  &kp UP      &kp PG_DN  &kp END  &trans
&trans  &kp GRAVE  &kp AT         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPS                          &trans       &kp LEFT   &kp DOWN    &kp RIGHT  &kp RET  &trans
&trans  &kp BSLH   &kp LESS_THAN  &kp LEFT_BRACE        &kp RBRC               &kp GREATER_THAN                  &key_repeat  &kp BSPC   &kp DELETE  &kp TAB    &kp ESC  &trans
&trans  &trans     &trans         &trans                                                         &trans          &trans       &trans     &trans
&trans  &trans                    &trans                &trans
                                  &trans                &trans                 &trans            &trans  &trans  &trans
        &trans     &trans
            >;
        };

        util {
            bindings = <
&trans  &trans        &trans        &trans        &trans      &trans                         &trans       &trans     &trans    &trans     &trans   &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &kp C_RECORD                   &kp HOME     &kp PG_UP  &kp UP    &kp PG_DN  &kp END  &trans
&trans  &kp LCTRL     &kp LALT      &kp LGUI      &kp LSHFT   &kp C_PLAY                     &trans       &kp LEFT   &kp DOWN  &kp RIGHT  &kp RET  &trans
&trans  &kp LG(Z)     &kp LG(X)     &kp LG(C)     &kp LG(V)   &kp LS(LG(Z))                  &key_repeat  &kp BSPC   &kp DEL   &kp TAB    &kp ESC  &trans
&trans  &trans        &trans        &trans                                   &trans          &trans       &trans     &trans
&trans  &trans                      &trans        &trans
                                    &bootloader   &trans      &trans         &trans  &trans  &bootloader
        &trans        &trans
            >;
        };
    };
};
