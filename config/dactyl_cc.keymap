/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        qw-TAB {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        qe-s-tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <13 15>;
        };

        lc-enter {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
        };

        m-bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <44 45>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <44 45>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
&kp EQUAL         &kp N1     &kp N2           &kp N3     &kp N4         &kp N5                            &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB           &kp Q      &kp W            &kp E      &kp R          &kp T                             &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSLH
&kp LEFT_CONTROL  &kp A      &kp S            &kp D      &kp F          &kp G                             &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z      &kp X            &kp C      &kp V          &kp B                             &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
&gresc            &mo 1      &kp LEFT         &kp RIGHT                           &kp UP                  &kp DOWN   &kp LBKT  &kp RBKT
&kp LALT          &kp LCMD                    &kp RGUI   &kp ESCAPE
                                              &kp SPACE  &kp BACKSPACE  &kp HOME  &kp PAGE_UP  &kp ENTER  &kp SPACE
                  &lt 1 END  &lt 1 PAGE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&kp LSHFT   &kp F2        &kp F3        &kp F4         &kp F5        &kp F6                         &kp F7         &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans      &kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&trans      &kp NUMBER_1  &kp N2        &kp N3         &kp N4        &kp N5                         &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4                   &trans         &trans        &trans        &trans        &trans        &trans
&bt BT_CLR  &trans        &trans        &trans                                      &trans          &trans         &trans        &trans
&trans      &trans                      &trans         &trans
                                        &bootloader    &trans        &trans         &trans  &trans  &trans
            &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                  &trans          &trans       &trans  &trans
&trans  &trans          &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &bootloader
        &trans  &trans
            >;
        };
    };
};
